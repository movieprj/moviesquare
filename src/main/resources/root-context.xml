<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- DataSource 등록 -->	
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		id="realDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<!-- <property name="url" value="jdbc:oracle:thin:@mylovebibiseo.c7idxpqil0a1.ap-northeast-2.rds.amazonaws.com:1521:ORCL" /> -->
		<property name="url" value="jdbc:oracle:thin:@moviesquare_high?TNS_ADMIN=C:\\devtools\\wallet_movie" />
	    <property name="username" value="ADMIN" />
	    <property name="password" value="Lovelybo==0528" />
	    <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
		<property name="testWhileIdle" value="true"/>
	</bean>
	
	
	<bean id="dataSource"
		class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource" />
		<property name="logFormatter">
			<bean
				class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
			<property name="loggingType" value="MULTI_LINE" />
			<property name="sqlPrefix" value="[SQL] " />
			</bean>
		</property>
	</bean>

	<!-- Spring과 MyBatis 연동 설정 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSession">
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />		
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- dao 에서 사용할 MyBatis 객체 생성 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSession"></constructor-arg>
	</bean>

	<!-- 트랜잭션 관리 설정 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- service 에서 필요한 시점에서 commit | rollback 이
	구동되게 aop 설정 처리 -->	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"
				rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method  name="update*" rollback-for="Exception" />
			<tx:method  name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven transaction-manager="transactionManager" />

	
</beans>





