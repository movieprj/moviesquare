<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

<resultMap type="Member" id="resultList">
	<result property="m_pw" column="m_pw"/>
	<result property="m_name" column="m_name"/>
	<result property="m_nickname" column="m_nickname"/>
	<result property="m_email" column="m_email"/>
	<result property="m_gender" column="m_gender"/>
	<result property="m_birthday" column="m_birthday"/>
	<result property="admin" column="admin"/>
	<result property="login_ok" column="login_ok"/>
	<result property="agecode" column="agecode"/>
	<result property="socal_id" column="socal_id"/>
</resultMap>

<!-- 회원 로그인여부 변경 -->
<update id="updateLoginOK" parameterType="Member">
	update member
	set login_ok = #{ login_ok }
	where m_nickname = #{ m_nickname }
</update>
<!-- 영화 제작비 입력 -->
<update id="updateCost" parameterType="Movie">
	UPDATE MOVIE
	   SET COST = #{ cost }
	 WHERE id = #{ id }
</update>

<!-- 멤버 전체 회원수 조회 -->
<select id="getListCount" resultType="_int">
	select count(*) from member where m_nickname != '관리자'
</select>

<select id="selectList" parameterType="Paging" resultMap="resultList">
	<![CDATA[
		SELECT *  
		FROM (SELECT ROWNUM RNUM, M_EMAIL, AGECODE, M_PW, SOCAL_ID, M_NAME, M_NICKNAME, M_GENDER, M_BIRTHDAY, ADMIN, LOGIN_OK
		       FROM (SELECT * FROM MEMBER where M_NICKNAME != '관리자'
		              ORDER BY M_NICKNAME DESC))  
		where rnum >= #{startRow} and rnum <= #{endRow}
	]]>
</select>

<!-- admin 회원정보 조회 -->
<select id="userIDSearchCount" parameterType="string" resultType="_int">
	select count(*)
	  from member
	 where M_NICKNAME like '%' || #{ keyword } || '%'
	   and M_NICKNAME != '관리자'
</select>
	
<select id="userIDSearch" parameterType="SearchPaging" resultMap="resultList">
<![CDATA[
	select *  
		from (select ROWNUM RNUM, M_EMAIL, AGECODE, M_PW, SOCAL_ID, M_NAME, M_NICKNAME, M_GENDER, M_BIRTHDAY, ADMIN, LOGIN_OK
			    from (select * from member
			     	   where M_NICKNAME like '%' || #{ keyword } || '%'
			       		 and M_NICKNAME != '관리자'
			           order by M_NICKNAME desc )) 
			where rnum >= #{startRow} and rnum <= #{endRow}
]]>
</select>
</mapper>